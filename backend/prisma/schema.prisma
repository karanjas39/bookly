generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          String       @id @default(uuid())
  email       String    @unique
  name        String
  password    String
  admin Boolean? @default(false)
  verified    Boolean @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  listedBooks Book[]     @relation(name: "ListedBooks")
  boughtBooks Book[]     @relation(name: "BoughtBooks")
  feedbacks   Feedback[]
  buyRequests BuyRequest[]
}

model Book {
  id          String       @id @default(uuid())
  name        String
  description String?
  author      String
  listed        Boolean   @default(true)
  price       Float
  sold Boolean @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  feedbacks   Feedback[]
  buyRequests BuyRequest[]
  
  buyerId     String?  
  buyer       User?      @relation(fields: [buyerId], references: [id], name: "BoughtBooks")
  sellerId    String
  seller      User       @relation(fields: [sellerId], references: [id], name: "ListedBooks")
  genreId     String
  genre       Genre     @relation(fields: [genreId], references: [id])

  @@index([name], name: "book_name_idx")
  @@index([author], name: "book_author_idx")
}

model BuyRequest {
  id          String       @id @default(uuid())

  userId String
  user User @relation(fields: [userId],references: [id])
  bookId String
  book Book @relation(fields: [bookId],references: [id])
}

model Feedback {
  id          String       @id @default(uuid())
  feedback String
  createdAt DateTime  @default(now())

  bookId   String
  book     Book     @relation(fields: [bookId], references: [id])
  givenBy  String
  user     User     @relation(fields: [givenBy], references: [id])

  @@index([bookId], name: "feedback_book_idx")
  @@index([givenBy], name: "feedback_given_by_idx")
}

model Genre {
  id          String       @id @default(uuid())
  name  String  @unique
  books Book[]
}
